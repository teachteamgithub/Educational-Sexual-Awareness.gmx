<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_cat</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>depth = y*+1;

cont_flag = false;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed = 0.05;
drawText = false;

message[0]="Hello there! Welcome to the world of Pokemon!"

message[1]="My name is Oak! People call me the #Pokemon Prof!"

message[2]="This world is inhabited by creatures called Pokemon!"

message[3]="For some people, Pokemon are pets."

message[4]="Others use them for fights."

message[5]="Myself..."

message[6]="I study Pokemon as a profession."

 

message_current=0; //0 is the first number in our array, and the message we are currently at

message_end=1; //6 is the last number in our array

message_draw=""; //this is what we 'write' out. It's blank right now

increase=0.5; //the speed at which new characters are added

characters=0; //how many characters have already been drawn

hold=0; //if we hold 'Z', the text will render faster

 

message_length=string_length(message[message_current]); //get the number of characters in the first message

 

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (drawText == true){

if characters&lt;message_length{ //if current character count is less than the amount in current message
hold=keyboard_check(ord("Z")); //hold is true or false if we hold 'Z' or not
characters+=increase*(1+hold); //increase speed based on hold
message_draw=string_copy(message[message_current],0,characters); //copy string to current character
}
else{ //if current character is more than the amount in the current message
if keyboard_check_pressed(ord("Z")){ //if we press Z...
if message_current&lt;message_end{ //if there are more messages left to show (0 -&gt; 6, in our case)
message_current+=1; //increase the message by 1
message_length=string_length(message[message_current]); //get the new character length for message
characters=0; //set the characters back to 0
message_draw=""; //clear the drawn text
}
/*
else if((message_current&gt;=message_end &amp;&amp; obj_player.have_pamphlet == true) || cont_flag) {
drawText = false;
obj_player.free = true;
y= y-1;
cont_flag = true;
}
*/
else{ //if our messages are done (we reach 6, in our case)...
drawText = false;
obj_player.free = true;
cont_flag = true;
}


//instance_destroy(); //destroy the object
}
}
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();
if (drawText == true){

draw_set_color(c_black);
draw_rectangle(view_xview[view_current],view_yview+view_hview-50,view_xview+view_wview,view_yview+view_hview,false);//128
//draw_rectangle(view_xview[view_current],view_hview-50,view_wview,view_hview,false);//128
draw_set_color(c_white);
draw_set_font(fnt_small);
draw_text(view_xview[view_current]+5,view_yview+view_hview-45,message_draw); //draw the text at the coordinates //32 //view_hview-96
//draw_text(view_xview[view_current],view_hview-150,message_draw); //draw the text at the coordinates //32 //view_hview-96

}
/*
draw_self();
if (drawText == true){

draw_set_color(c_black);
draw_rectangle(view_xport[0],view_hview-50,view_wview,view_hview,false);//128
draw_set_color(c_white);
draw_set_font(fnt_small);
draw_text(view_xport[0],view_hview-35,message_draw); //draw the text at the coordinates //32 //view_hview-96

}*/


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="32">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Start talking to Harry
if (distance_to_object(obj_player)&lt;48){
    
    //scr_text("Hi, my name is Harry",2,x,y);
    var xx = obj_player.x+64*cos(degtorad(obj_player.image_angle));
    var yy = obj_player.x-64*sin(degtorad(obj_player.image_angle));
    
    if (drawText == false){
        drawText=true;
        obj_player.free = false;
        //scr_text(text,2,x,y);
    }else{
        drawText=false;
        obj_player.free = true;       
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
